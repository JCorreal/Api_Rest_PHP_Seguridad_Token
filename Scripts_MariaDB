CREATE DATABASE ApiRest_DB CHARACTER SET utf8 COLLATE utf8_general_ci;

CREATE TABLE tbl_employees (
  employee_id int(6) NOT NULL AUTO_INCREMENT,
  first_name varchar(20) DEFAULT NULL,
  last_name varchar(25) NOT NULL,
  email varchar(25) NOT NULL,
  phone_number varchar(20) DEFAULT NULL,
  hire_date date NOT NULL,
  job_id varchar(10) NOT NULL,
  salary decimal(8,2) NOT NULL,
  commission_pct decimal(2,2) DEFAULT NULL,
  manager_id int(6) DEFAULT NULL,
  department_id int(4) DEFAULT NULL,
  PRIMARY KEY (employee_id),
  UNIQUE KEY UK_email (email),
  CONSTRAINT CHK_salary CHECK (salary > 0)
);
 
INSERT INTO tbl_employees
(first_name, last_name, email, phone_number, hire_date, job_id, salary, commission_pct, manager_id, department_id)
VALUES
('Steven', 'King', 'SKING', '515.123.4567', '1987-06-17', 'AD_PRES', 24000, NULL, NULL, 90),
('Nancy', 'Greenberg', 'NGREENBE', '515.124.4569', '1994-08-17', 'FI_MGR', 12000, NULL, 101, 100);

CREATE TABLE tbl_security (
  security_id int(4) NOT NULL AUTO_INCREMENT,
  username varchar(20) NOT NULL,
  password tinyblob NOT NULL,
  profile varchar(20) NOT NULL DEFAULT 'Aux',
  PRIMARY KEY (security_id),
  UNIQUE KEY UQ_Username (username),
  CONSTRAINT CHK_Profile CHECK (profile in ('Admin','Aux'))
);

INSERT INTO tbl_security (username, password, profile)
VALUES ('Admin', aes_encrypt('123456', 'ApiRest_PHP_JWT') ,'Admin');

INSERT INTO tbl_security (username, password)
VALUES ('Aux', aes_encrypt('456123', 'ApiRest_PHP_JWT'));

CREATE PROCEDURE spr_R_ObtenerAcceso(
  IN p_username  VARCHAR(20), 
  IN p_password  INT(6)
)
BEGIN
      SELECT username, profile
	  FROM tbl_security 
	  WHERE username =  p_username
      AND cast(aes_decrypt(password, 'ApiRest_PHP_JWT') as char) = p_password Limit 1;   
END;

CREATE PROCEDURE spr_IUEmployees(
IN p_employee_id       int (6),
IN p_first_name        varchar(20),
IN p_last_name         varchar(25),
IN p_email             varchar(25),
IN p_phone_number      varchar(20),
IN p_hire_date         date,
IN p_job_id            varchar(10),
IN p_salary            decimal(8,2),
IN p_commission_pct    decimal(2,2),    
IN p_manager_id        int (6),
IN p_department_id     int (4),
OUT p_Resultado        tinyint(1))
BEGIN       
      DECLARE v_DatoExiste tinyint(1) DEFAULT 0;
      
      DECLARE exit HANDLER
      FOR SQLEXCEPTION
      BEGIN
           SET p_RESULTADO = -1;           
           ROLLBACK;
      END;
      
     SET p_Resultado = 0;     
     
     IF (p_employee_id = 0) THEN
         START TRANSACTION;
         INSERT INTO tbl_employees(first_name, 
                               last_name, 
                               email, 
                               phone_number, 
                               hire_date, 
                               job_id, 
                               salary, 
                               commission_pct, 
                               manager_id, 
                               department_id)
         VALUES(p_first_name, 
                p_last_name, 
                p_email, 
                p_phone_number, 
                p_hire_date, 
                p_job_id, 
                p_salary, 
                p_commission_pct, 
                P_manager_id, 
                p_department_id);

         COMMIT;
     ELSE
         SELECT employee_id INTO v_DatoExiste FROM tbl_employees WHERE employee_id = p_employee_id;
         IF (v_DatoExiste <> 0) THEN
             START TRANSACTION;
             UPDATE tbl_employees SET   
             first_name     = p_first_name, 
             last_name      = p_last_name, 
             email          = p_email, 
             phone_number   = p_phone_number, 
             hire_date      = p_hire_date, 
             job_id         = p_job_id, 
             salary         = p_salary, 
             commission_pct = p_commission_pct, 
             manager_id     = p_manager_id, 
             department_id  = p_department_id
             WHERE employee_id = p_employee_id ;          
             
             COMMIT;
         ELSE
             SET p_RESULTADO = -2; 
         END IF;
     END IF;           
END;

CREATE PROCEDURE spr_Listado_Employees(
IN p_employee_id  int (4))
BEGIN	
     IF (p_employee_id <> 0) THEN
         SELECT * FROM tbl_employees WHERE employee_id = p_employee_id;
     ELSE                                    
	       SELECT * FROM tbl_employees;
     END IF;         
END;

CREATE PROCEDURE spr_DEmployee(
IN  p_employee_id int(4),
OUT p_Resultado  tinyint(1))
BEGIN
      DECLARE v_DatoExiste tinyint(1) DEFAULT 0;
      
      DECLARE exit HANDLER
      FOR SQLEXCEPTION
      BEGIN
           SET p_Resultado = -1;           
           ROLLBACK;
      END;
      
      SET p_Resultado = 0;
      SELECT employee_id INTO v_DatoExiste FROM tbl_employees WHERE employee_id = p_employee_id;
      IF (v_DatoExiste <> 0) THEN
          START TRANSACTION;
          DELETE FROM tbl_employees
          WHERE employee_id = p_employee_id; 
          
          COMMIT;
      ELSE          
          SET p_Resultado = -2;
      END IF;      
END;

